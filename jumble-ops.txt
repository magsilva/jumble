A description of the mutations performed by Jumble.

aaload			-

aastore			-

aconst_null		-

aload			-

aload_0			-

aload_1			-

aload_2			-

aload_3			-

anewarray		-

areturn			if (returnVal != null) {
					return null;
				} else {
					throw new RuntimeException();
				}
		
arraylength		-

astore			-

astore_0		-

astore_1		-

astore_2		-

astore_3		-

athrow			-

baload			-

bastore			-

bipush			bipush (value + 1)

caload			-

castore			-

checkcast		-

d2f				-

d2i				-

d2l				-

dadd			dsub

daload			-

dastore			-

dcmpg			-

dcmpl			-

dconst_0		dconst_1

dconst_1		dconst_0

ddiv			dmul

dload			-

dload_0			-

dload_1			-

dload_2			-

dload_3			-

dmul			ddiv

dneg			nop

drem			dmul

dreturn			return -(returnValue + 1.0);

dstore			-

dstore_0		-

dstore_1		-

dstore_2		-

dstore_3		-

dsub			dadd

dup				-

dup_x1			-

dup_x2			-

dup2			-

dup2_x1			-

dup2_x2			-

f2d				-

f2i				-

f2l				-

fadd			fsub

faload			-

fastore			-

fcmpg			-

fcmpl			-

fconst_0		fconst_1

fconst_1		fconst_0

fconst_2		fconst_0

fdiv			fmul

fload			-

fload_0			-

fload_1			-

fload_2			-

fload_3			-

fmul			fdiv

fneg			nop

frem			fmul

freturn			return -(returnValue + 1.0);

fstore			-

fstore_0		-

fstore_1		-

fstore_2		-

fstore_3		-

fsub			fadd

getfield		-

getstatic		-

goto			-

goto_w			-

i2b				-

i2c				-

i2d				-

i2f				-

i2l				-

i2s				-

iadd			isub

iaload			-

iand			ior

iastore			-

iconst_m1		iconst_1

iconst_0		iconst_1

iconst_1		iconst_0

iconst_2		iconst_3

iconst_3		iconst_4

iconst_4		iconst_5

iconst_5		iconsts_m1

idiv			imul

ifeq			ifne

ifge			iflt

ifgt			ifle

ifle			ifgt

iflt			ifge

ifne			ifeq

ifnonnull		ifnull

ifnull			ifnonnull

if_acmpeq		if_acmpne

if_acmpne		if_acmpeq

if_icmpeq		if_icmpne

if_icmpge		if_icmplt

if_icmpgt		if_icmple

if_icmple		if_icmpgt

if_icmplt		if_icmpge

if_icmpne		if_icmpeq

iinc			iinc (-value)

iload			-

iload_0			-

iload_1			-

iload_2			-

iload_3			-

imul			idiv

ineg			nop

instanceof		-

invokeinterface	-

invokespecial	-

invokestatic	-

invokevirtual	-

ior				iand

irem 			imul

ireturn			if (ret == 0) return 1; else return 0;

ishl			ishr

ishr			ishl

istore			-

istore_0		-

istore_1		-

istore_2		-

istore_3		-

isub			iadd

iushr			ishl

ixor			iand

jsr				-

jsr_w			-

l2d				-

l2f				-

l2i				-

ladd			lsub

laload			-

land			lor

lastore			-

lcmp			-

lconst_0		-

lconst_1		-

ldc				-

ldc_w			-

ldc2_w			-

ldiv			lmul

lload			-

lload_0			-

lload_1		-

lload_2		-

lload_3		-

lmul		ldiv

lneg		nop

lookupswitch	-

lor		land

lrem		lmul

lreturn		return value + 1;

lshl		lshr

lshr		lshl

lstore		-

lstore_0	-

lstore_1	-

lstore_2	-

lstore_3	-

lsub		ladd

lushr		lshl

lxor		land

monitorenter	-

monitorexit	-

multianewarray	-

new		-

newarray	-

nop		-

pop		-

pop2		-

putfield	-

putstatic	-

ret		-

return		-

saload		-

sastore		-

sipush		sipush(value + 1)

swap		-

tableswitch	-

wide		-