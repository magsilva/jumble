<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="jumble" basedir="." default="jar">

	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="lib.dir" value="lib" />
	<property name="build.dir" value="build" />
	<property name="test.build.dir" value="build_test" />

	<path id="classpath">
		<pathelement location="${lib.dir}/bcel.jar" />
		<pathelement location="${lib.dir}/junit-4.6.jar" />
		<pathelement location="${lib.dir}/reeltwo.jar" />
		<pathelement location="${lib.dir}/testclasses.jar" />
		<pathelement location="${lib.dir}/jumble-annotations.jar" />
		<pathelement location="${build.dir}" />
		<pathelement location="${test.build.dir}" />
	</path>

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${test.build.dir}" />
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${test.build.dir}" />
		<delete file="TEST-AllTests.txt" />
	</target>


	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${build.dir}" includes="**/*.java" source="1.5" debug="on">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="compile" description="Generates a JAR file containing Jumble and its dependencies">
		<jar destfile="jumble.jar">
			<fileset dir="${build.dir}" includes="**/*.class" />
			<zipfileset src="${lib.dir}/bcel.jar" />
                     <zipfileset src="${lib.dir}/jumble-annotations.jar" />
			<zipfileset src="${lib.dir}/junit-4.6.jar" />
			<zipfileset src="${lib.dir}/reeltwo.jar" />
			<manifest>
				<attribute name="Main-Class" value="com.reeltwo.jumble.Jumble" />
			</manifest>
		</jar>
	</target>

	<target name="compile-tests" depends="compile">
		<javac srcdir="${test.dir}" destdir="${test.build.dir}">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>
		<!-- now copy sample output files into test.build.dir -->
		<copy todir="${test.build.dir}">
			<fileset dir="${test.dir}">
				<include name="**/*.txt" />
			</fileset>
		</copy>
	</target>

	<target name="test" description="Run tests" depends="compile-tests">
		<junit fork="yes" printsummary="yes">
			<formatter type="plain" />
			<test name="AllTests" />
			<classpath>
				<path refid="classpath" />
			</classpath>
		</junit>
	</target>

	<!-- Build jar file containing utility code from the Reel Two
	     internal source tree. Can only be run by someone at Reel
	     Two.
	  -->
	<property name="ext.src.dir" value="${user.home}/java/main/src" />
	<target name="makeExtLibJar" depends="clean,init" description="Generates a JAR file of the reeltwo dependencies used by jumble">
		<copy todir="${build.dir}" includeEmptyDirs="no">
			<fileset dir="${ext.src.dir}">
				<include name="com/reeltwo/util/CLIFlags.java" />
				<include name="com/reeltwo/util/WrappingStringBuffer.java" />
			</fileset>
		</copy>
		<javac srcdir="${build.dir}" destdir="${build.dir}" source="1.5" target="1.5" depend="true" debug="true" />
		<jar destfile="${lib.dir}/reeltwo.jar" index="true">
			<fileset dir="${build.dir}" />
			<fileset dir="." includes="COPYING.txt" />
			<!-- Use GPL for the utility code -->
		</jar>
	</target>
</project>
