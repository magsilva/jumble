<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="JumbleAntPlugin" basedir="." default="jar">
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="build.dir" value="build" />
	<property name="test.build.dir" value="build_test" />
	<property name="test.dir" value="test" />
	<property name="example.dir" value="example" />
	<property name="jumble.dir" value="../jumble" />
      	<property name="run.dir" value="example" />
	<property name="result.dir" value="." />

	<path id="classpath">
		<pathelement location="${jumble.dir}/jumble.jar" />
              <pathelement location="${lib.dir}/ant.jar" />
	       <pathelement location="${build.dir}" />
              <pathelement location="${test.build.dir}" />
	</path>

    	<target name="clean">
	    <delete dir="${build.dir}"/>
	    <delete file="antplugin.jar"/>
       </target>

	<target name="test_clean">
	    <delete dir="${test.build.dir}" />
       </target>

      	<target name="init" depends="clean" >
		<mkdir dir="${build.dir}" />
       </target>


      	<target name="test_init" depends="test_clean" >
		<mkdir dir="${test.build.dir}" />
       </target>

	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${build.dir}" includes="**/*.java" source="1.5" debug="on">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="compile" description="Generates a JAR file containing ClassFinder and its dependencies">
		<jar destfile="jumble-antplugin.jar">
	       <fileset dir="${build.dir}" includes="**/*.class" />
              <zipfileset src="${jumble.dir}/jumble.jar" />
              <zipfileset src="${lib.dir}/ant.jar" />  <!-- needed for command-line use -->
		     <manifest>
		           <attribute name="Main-Class" value="ClassFinderCmdLine" />
		     </manifest>
		</jar>
          <taskdef name = "cf"
             classname ="ClassFinderAnt">
                 <classpath refid="classpath"/>
          </taskdef>
	</target>

	<target name="compile-example">
		<javac srcdir="${example.dir}" destdir="${example.dir}">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>
     </target>

	<target name="compile-tests" depends="compile">
		<javac srcdir="${test.dir}" destdir="${test.build.dir}">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>

	</target>

	<target name="test" description="Run unit tests" depends="test_init,compile-tests,compile-example">
		<junit fork="yes" printsummary="yes">
			<formatter type="plain" />
			<test name="AllTests" />
			<classpath>
				<path refid="classpath" />
			</classpath>
		</junit>
	</target>



<!-- System test, can set jumble flags, recursive scan and output to file -->
<target name = "systest" depends="jar,compile-example"
  description="Run a system test in the 'example' directory.">
  <cf 
      inlineConstants = "true"
      returnVals = "true"
      stores = "false"
      increments  = "true"
      cpool = "true"
      switches = "true"
      ordered = "true"
      verbose = "false"
      outputtofile = "false"  
      recurscan = "true"
      path = "${example.dir}" 
      resultpath = "." >
      <path>                                                
            <fileset dir="${lib.dir}" includes="**/*.jar"/>
            <fileset dir="${jumble.dir}" includes = "jumble.jar"/>
      </path>
   </cf>
</target>

<!-- Run plugin, can set jumble flags, recursive scan and output to file -->
<target name = "run" depends="jar"
   description="Run the Jumble plugin: e.g., ant run -Drun.dir=example">
  <cf 
      inlineConstants = "true"
      returnVals = "true"
      stores = "false"
      increments  = "true"
      cpool = "true"
      switches = "true"
      ordered = "true"
      verbose = "false"
      outputtofile = "false"  
      recurscan = "true"
      path = "${run.dir}" 
      resultpath = "${result.dir}" >
      <path>                                                
            <fileset dir="${lib.dir}" includes="**/*.jar"/>
            <fileset dir="${jumble.dir}" includes = "jumble.jar"/>
      </path>
   </cf>
</target>

</project>
